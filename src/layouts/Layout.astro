---
import '../styles/normalize.css';

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  @import url('https://fonts.googleapis.com/css2?family=Mulish:ital,wght@0,200..1000;1,200..1000&family=Philosopher:wght@400;700&display=swap');
  :root {
    /* Main Colors for this project */
    --baby-powder: rgb(253, 255, 252);
    --rich-black: rgb(2, 22, 39);
    --light-sea-green: rgb(46, 194, 179);
    --caribbean-current: rgb(25, 97, 90);
    --red-pantone: rgb(231, 29, 52);
    --orange-peel: rgb(255, 159, 28);

    --white-color: var(--baby-powder);
    --dark-color: var(--rich-black);
    --red-color: var(--red-pantone);
    --orange-color: var(--orange-peel);

    /*Dark Theme */
    --light-green: var(--light-sea-green);

    /* Light Theme */
    --dark-green: var(--caribbean-current);

    /* Font Types */
    --font-titles: Philosopher, sans-serif;
    --font-texts: Mulish, sans-serif;

    /* Text Size */
    --text-sm: 1.2rem;
    --text-md: 1.4rem;
    --text-normal: 1.6rem;
    --text-large: 2rem;
    --text-xl: 2.4rem;

    /* Media Queries */
    --d-small: 480px;
    --d-medium: 900px;
    --d-large: 1024px;
    --d-xlarge: 1440px;

    /* Scheme Color */
    color-scheme: light dark;
  }

  html {
    box-sizing: border-box;
    font-size: 62.5%;
    scroll-behavior: smooth;
  }

  body {
    background-color: var(--white-color);
    background: radial-gradient(circle at top, #15534d 0%, #021627 70%);
    background-repeat: no-repeat;
    color: var(--dark-color);
    font-size: 1.6rem;
    height: 100vh;
  }

  body.dark__theme {
    background-color: var(--dark-color);
    background: radial-gradient(circle at top, #15534d 0%, #021627 70%);
    background-repeat: no-repeat;
    color: var(--white-color);
  }

  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }

  a {
    cursor: pointer;
    text-decoration: none;
    font-family: var(--font-titles);
    color: var(--white-color);
  }

  @media (prefers-color-scheme: dark) {
    a {
      color: var(--white-color);
    }
  }

  body.light__theme a {
    color: var(--dark-color);
  }

  h1,
  h2,
  h3,
  h4 {
    font-family: var(--font-titles);
    margin: 0;
  }

  h2 {
    font-size: clamp(20px, 3vw, 35px);
    filter: opacity(65%);
  }

  p,
  span {
    font-family: var(--font-texts);
    line-height: 1.5;
    margin: 0;
  }

  img,
  picture {
    max-width: 100%;
    width: 100%;
  }

  /** GLOBAL STYLES **/

  .section-padding {
    padding: 4rem 2rem;
  }

  /** Size Font **/
  .font-sm {
    font-size: 1.2rem;
  }

  /* Container */
  .container {
    margin: 0 auto;
    width: 100%;
    max-width: 120rem;
  }

  .text-green {
    color: var(--dark-green);
  }

  .title-lg {
    font-size: var(--text-xl);
  }

  .brightness-100 {
    filter: brightness(100%);
  }

  .text-center {
    text-align: center;
  }

  .push-right {
    margin-left: auto;
  }

  /**** DARK THEME  ****/
  @media (prefers-color-scheme: dark) {
    body {
      background: radial-gradient(circle at top, #15534d 0%, #021627 70%);
      background-color: var(--dark-color);
      background-repeat: no-repeat;
      color: var(--white-color);
    }

    body.light__theme {
      background: none;
      background-color: var(--white-color);
      color: var(--dark-color);
    }

    body.light__theme .text-green {
      color: var(--dark-green);
    }

    .text-green {
      color: var(--light-green);
    }
  }
</style>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const colorThemePreference = setColorSchemePreference();

    localStorage.setItem('theme', colorThemePreference);

    if (colorThemePreference === 'light') {
      document.body.classList.add('light__theme');
    }
  });

  function setColorSchemePreference() {
    if (
      window.matchMedia &&
      window.matchMedia('(prefers-color-scheme: dark)').matches
    ) {
      return 'dark';
    } else {
      return 'light';
    }

    return 'no-preference';
  }
</script>
