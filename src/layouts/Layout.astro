---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>
<style is:global>
  @import url('https://fonts.googleapis.com/css2?family=Manrope:wght@200..800&family=Sarabun:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800&display=swap');

  :root {
    /* Main Colors for this project */
    --baby-powder: #fdfffc;
    --rich-black: #021627;
    --light-sea-green: #2ec4b6;
    --red-pantone: #e71d36;
    --orange-peel: #ff9f1c;

    --white-color: var(--baby-powder);
    --dark-color: var(--rich-black);
    --light-color: var(--light-sea-green);
    --red-color: var(--red-pantone);
    --orange-color: var(--orange-peel);

    /* Scheme Color */
    color-scheme: light dark;
  }

  html {
    box-sizing: border-box;
    font-family: Manrope, Sarabun, sans-serif;
    font-size: 62.5%;
    scroll-behavior: smooth;
  }

  body {
    background-color: var(--white-color);
    color: var(--dark-color);
    font-size: 1.6rem;
    display: grid;
    height: 100vh;
    grid-template-areas:
      'header'
      'main'
      'footer';
    grid-template-rows: 10rem 1fr 8rem;
  }

  body.dark__theme {
    background-color: var(--dark-color);
    color: var(--white-color);
  }

  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }

  a {
    cursor: pointer;
    text-decoration: none;
  }

  img,
  picture {
    max-width: 100%;
    width: 100%;
  }

  /** Size Font **/
  .font-sm {
    font-size: 1.2rem;
  }

  /**** DARK THEME  ****/
  @media (prefers-color-scheme: dark) {
    body {
      background-color: var(--dark-color);
      color: var(--white-color);
    }

    body.light__theme {
      background-color: var(--white-color);
      color: var(--dark-color);
    }
  }
</style>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const colorThemePreference = setColorSchemePreference();

    localStorage.setItem('theme', colorThemePreference);

    if (colorThemePreference === 'light') {
      document.body.classList.add('light__theme');
    }
  });

  function setColorSchemePreference() {
    if (
      window.matchMedia &&
      window.matchMedia('(prefers-color-scheme: dark)').matches
    ) {
      return 'dark';
    } else {
      return 'light';
    }

    return 'no-preference';
  }
</script>
