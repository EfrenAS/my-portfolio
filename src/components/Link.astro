---
interface Props {
  title: string;
  href: string;
  isBold?: boolean;
  isButton?: boolean;
  isBordered?: boolean;
  isOrange?: boolean;
  isGreen?: boolean;
  isSmokedGreen?: boolean;
  isWhite?: boolean;
  shadowEffect?: boolean;
  largeLink?: boolean;
  pushedRight?: boolean;
  rel?: string;
  target?: string;
  mobileLink?: boolean;
}

const {
  target,
  href,
  title,
  pushedRight,
  isBold,
  isButton,
  isGreen,
  isWhite,
  isBordered,
  isOrange,
  isSmokedGreen,
  shadowEffect,
  mobileLink,
} = Astro.props;
---

<a
  class:list={[
    {
      button: isButton,
      'link-bordered': isBordered,
      bold: isBold,
      green: isGreen,
      orange: isOrange,
      'push-right': pushedRight,
      'smoked-green': isSmokedGreen,
      white: isWhite,
      'shadow-effect': shadowEffect,
      'mobile-link': mobileLink,
    },
  ]}
  target={target}
  href={href}
  title={title}
>
  <slot />
</a>
<style>

  a {
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .mobile-link {
    font-size: 3rem;
  }

  @media (min-width: 600px) {
    .mobile-link {
      font-size: var(--text-normal);
    }
  }

  .button,
  .link-bordered {
    width: fit-content;
  }

  .button {
    backdrop-filter: blur(5px);
    border-radius: 0.5rem;
    padding: 1rem 2rem;
  }

  .link-bordered {
    position: relative;
    padding: 1rem 0;
  }

  .push-right {
    margin-left: auto;
  }

  .bold {
    font-weight: 600;
  }

  /* Light Theme */
  .green {
    color: rgba(25, 97, 90, 80%);
    transition: all 0.3s ease;
  }

  .green:hover,
  .green:active {
    color: var(--dark-green);
    transform: scale(1.1);
  }

  .shadow-effect:hover,
  .shadow-effect:active {
    box-shadow: 3px 3px 0 0 var(--dark-green);
  }

  .link-bordered::after {
    content: ' ';
    position: absolute;
    background-color: rgba(25, 97, 90, 80%);
    border-radius: 5px;
    bottom: 0;
    left: 0;
    height: 2px;
    width: 35%;
    transition: all 0.4s ease-out;
  }

  .link-bordered:hover::after,
  .link-bordered:active::after {
    background-color: var(--dark-green);
  }

  @media (prefers-color-scheme: dark) {
    .green {
      color: rgba(46, 196, 182, 80%);
    }

    .green:hover,
    .green:active {
      color: var(--light-green);
    }

    .shadow-effect:hover,
    .shadow-effect:active {
      box-shadow: 3px 3px 0 0 var(--light-green);
    }

    .smoked-green {
      background-color: rgba(46, 196, 182, 10%);
    }

    .link-bordered::after {
      background-color: rgba(46, 196, 182, 80%);
    }

    .link-bordered:hover::after,
    .link-bordered:active::after {
      width: 100%;
      background-color: var(--light-green);
    }

    body.light__theme .green {
      color: rgba(25, 97, 90, 80%);
    }

    body.light__theme .green:hover,
    body.light__theme .green:active {
      color: var(--dark-green);
    }

    body.light__theme .shadow-effect:hover,
    body.light__theme .shadow-effect:active {
      box-shadow: 3px 3px 0 0 var(--dark-green);
    }

    body.light__theme .link-bordered::after {
      background-color: rgba(25, 97, 90, 80%);
    }

    body.light__theme .link-bordered:hover::after,
    body.light__theme .link-bordered:active::after {
      background-color: var(--dark-green);
    }
  }
</style>
