---
  import Pill from "./Pill.astro"
  import { type CollectionEntry } from "astro:content";
  import CollapsedTextButton from "./CollapsedTextButton.astro";
  
  interface Props {
    work: CollectionEntry<'work'>;
  }

  const { work } = Astro.props;
  const { company, role, date, tags } = work.data;
  const {Content} = await work.render()
---
<article class="work__card">
  <div class="work__header">
    <h3 class="work__header-text">
      <time datetime={date}>{date}</time>
      •
      <span>{company}</span>
    </h3>
    <h4 class="work__role">{role}</h4>
  </div>
  <div class="work__body">
    <p class="work__tags">
      {
        tags.map((tag: string, index: number) => {
          return (
            <>
              <Pill text={tag} isOrangeText/> {index < tags.length - 1 && '•'}
            </>
          )
        })
      }
    </p>
    <div class="work__description collapsed">
      <Content />
    </div>
  </div>
  <div class="work-footer">
    <CollapsedTextButton id={work.slug} client:visible/>
  </div>
</article>
<style>
  .work__card:nth-child(even) {
    margin-left: auto;
  }

  .work__card:nth-child(odd) {
    margin-right: auto;
  }

  .work__card {
    position: relative;
    display: flex;
    flex-direction: column;
    background-color: rgba(15, 12, 41, 10%);
    backdrop-filter: blur(5px);
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px rgba(1, 1, 1, 0.2);
    -webkit-box-shadow: 0 4px 6px rgba(1, 1, 1, 0.2);
    -moz-box-shadow: 0 4px 6px rgba(1, 1, 1, 0.2);
    max-width: 800px;
    padding: 2rem;
    width: 100%;
    border-style: inset;
    border: 3px solid transparent;
    box-sizing: border-box;
  }
  
  .work__card:hover {
    border-color: var(--primary-color);
    animation: border-grow 0.3s linear;
  }

  body.light__theme .work__card {
    background-color: rgba(15, 12, 41, 10%);
  }

  @media (prefers-color-scheme: dark) {
    .work__card {
      background-color: rgba(15, 12, 41, 90%);
    }
  }

  body.dark__theme .work__card {
    background-color: rgba(15, 12, 41, 90%);
  }
  
  .collapsed {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    animation: collapse 0.2s linear;
  }

  .work__header{
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    justify-content: center;
  }

  .work__header-text {
    font-size: clamp(var(--text-md), 4vw, var(--text-xl));
    font-weight: 700;
    filter: opacity(55%);
  }
  
  .work__role {
    font-size: clamp(3rem, 5vw, 7rem);
    font-weight: 700;
    filter: opacity(85%);
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.25);
  }
  
  .work__tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    font-size: clamp(var(--text-md), 2vw, var(--text-normal));
    margin-top: 1rem;
  }
  
  .work__description {
    font-size: var(--text-normal);
    filter: opacity(85%);
    margin-top: 2rem;
    text-wrap: pretty;
  }

  .work__description p{
    margin-block: 1lh;
  }

  .work-footer {
    padding-top: 2rem;
    cursor: pointer;
  }


  @keyframes border-grow {
    from {
      border-color: transparent;
    }

    to {
      border-color: var(--primary-color);
    }
  }

  @keyframes collapse {
    from {
      opacity: 0;
      transform: translateY(100%);
    }

    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
